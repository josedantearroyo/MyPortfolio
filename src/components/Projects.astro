---
import { Icon } from "astro-icon/components"
import portfolioImage from "../assets/images/portafolio.png"

const TAGS = {
    NEXT:{
        name:"Next.js",
        class: "bg-black text-white",
        icon: "tabler:brand-nextjs",
    },
    TAILWIND:{
        name:"Tailwind CSS",
        class: "bg-teal-500 text-white",
        icon: "tabler:brand-tailwind",
    },
    REACT:{
        name:"React",
        class: "bg-blue-500 text-white",
        icon: "tabler:brand-react",
    },
    JAVASCRIPT:{
        name:"JavaScript",
        class: "bg-yellow-500 text-black",
        icon: "tabler:brand-javascript",
    },
    NODEJS:{
        name:"Node.js",
        class: "bg-green-600 text-white",
        icon: "tabler:brand-nodejs",
    },
    ASTRO:{
        name:"Astro",
        class: "bg-purple-600 text-white",
        icon: "tabler:rocket",
    },
    MYSQL:{
        name:"MySQL",
        class: "bg-blue-700 text-white",
        icon: "tabler:brand-mysql",
    },
    LARAVEL:{
        name:"Laravel",
        class: "bg-red-600 text-white",
        icon: "tabler:brand-laravel",
    },
    // Nuevos logos usando Simple Icons
    SPRINGBOOT:{
        name:"Spring Boot",
        class: "bg-green-500 text-white",
        icon: "simple-icons:springboot",
    },
    JAVA:{
        name:"Java",
        class: "bg-orange-600 text-white",
        icon: "simple-icons:oracle",
    },
    MONGODB:{
        name:"MongoDB",
        class: "bg-green-700 text-white",
        icon: "simple-icons:mongodb",
    },
    POSTGRESQL:{
        name:"PostgreSQL",
        class: "bg-blue-800 text-white",
        icon: "simple-icons:postgresql",
    },
    DOCKER:{
        name:"Docker",
        class: "bg-blue-600 text-white",
        icon: "simple-icons:docker",
    },
    PYTHON:{
        name:"Python",
        class: "bg-yellow-400 text-black",
        icon: "simple-icons:python",
    },
    DJANGO:{
        name:"Django",
        class: "bg-green-800 text-white",
        icon: "simple-icons:django",
    },
    VUE:{
        name:"Vue.js",
        class: "bg-green-500 text-white",
        icon: "simple-icons:vuedotjs",
    },
    ANGULAR:{
        name:"Angular",
        class: "bg-red-700 text-white",
        icon: "simple-icons:angular",
    },
    TYPESCRIPT:{
        name:"TypeScript",
        class: "bg-blue-600 text-white",
        icon: "simple-icons:typescript",
    },
}

const PROJECTS = [
    {
        title: "Kimsa Inventory",
        description: "Software de inventario y facturación para pequeñas y medianas empresas. Sistema completo con gestión de productos, clientes, proveedores y reportes.",
        link: "https://kimsainventory.com",
        github: "https://github.com/username/kimsa-inventory",
        tags: [TAGS.NEXT, TAGS.TAILWIND, TAGS.REACT],
        image: "/projects/kimsa-inventory.png",
    },
    {
        title: "API REST Spring Boot",
        description: "API REST robusta desarrollada con Spring Boot y Java para gestión de usuarios, autenticación JWT y operaciones CRUD con base de datos PostgreSQL.",
        link: "https://api-springboot.com",
        github: "https://github.com/username/api-springboot",
        tags: [TAGS.SPRINGBOOT, TAGS.JAVA, TAGS.POSTGRESQL],
        image: "/projects/api-springboot.png",
    },
    {
        title: "E-commerce Platform",
        description: "Plataforma de comercio electrónico moderna con carrito de compras, pagos integrados y panel de administración desarrollada con React y Node.js.",
        link: "https://example-ecommerce.com",
        github: "https://github.com/username/ecommerce",
        tags: [TAGS.REACT, TAGS.NODEJS, TAGS.MONGODB],
        image: "/projects/ecommerce.png",
    },
    {
        title: "Sistema de Gestión Empresarial",
        description: "Sistema integral para gestión empresarial con microservicios en Spring Boot, contenedores Docker y base de datos distribuida.",
        link: "https://sistema-gestion.com",
        github: "https://github.com/username/sistema-gestion",
        tags: [TAGS.SPRINGBOOT, TAGS.DOCKER, TAGS.MYSQL],
        image: "/projects/sistema-gestion.png",
    },
    {
        title: "Portafolio Web",
        description: "Portafolio personal desarrollado con Astro, TypeScript, con modo oscuro, animaciones y diseño responsive optimizado para rendimiento.",
        link: "",
        github: "https://github.com/josedantearroyo/MyPortfolio",
        tags: [TAGS.ASTRO, TAGS.TAILWIND, TAGS.TYPESCRIPT],
        image: portfolioImage,
    },
    {
        title: "App Web Gestión de Boletas",
        description: "Aplicación web para digitalización y gestión de boletas para la UGEL ANDAHUAYLAS con funcionalidades de digitalización, búsqueda avanzada y reportes detallados.",
        link: "https://taskmanager.com",
        github: "https://github.com/username/taskmanager",
        tags: [TAGS.PYTHON, TAGS.DJANGO, TAGS.POSTGRESQL],
        image: "/projects/taskmanager.png",
    },
]
---

<div class="w-full mt-0">
    <!-- Título de la sección -->
    <div class="text-center mb-12">
        <h3 class="text-3xl font-bold text-gray-900 dark:text-gray-100 mb-4">
            Proyectos Destacados
        </h3>
        <p class="text-lg text-gray-600 dark:text-gray-400">
            Mis proyectos desarrollados con tecnologías modernas.
        </p>
    </div>

    <!-- Grid responsive de proyectos -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 px-2 sm:px-0">
        {
            PROJECTS.map(({image, title, description, tags, link, github}, index) => (
                <article class="bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 overflow-hidden hover:shadow-xl transition-all duration-300 group mx-2 sm:mx-0 flex flex-col h-full">
                    <!-- Imagen del proyecto -->
                    <div class="relative h-48 bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-700 dark:to-gray-600 overflow-hidden flex-shrink-0">
                        {image ? (
                            <img 
                                src={typeof image === 'string' ? image : image.src} 
                                alt={title}
                                class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-110"
                            />
                        ) : (
                            <div class="absolute inset-0 flex items-center justify-center">
                                <Icon name="tabler:photo" class="w-12 h-12 text-gray-400 dark:text-gray-500" />
                            </div>
                        )}
                        <!-- Overlay con enlaces -->
                        <div class="absolute inset-0 bg-black/60 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center gap-3">
                            {link && (
                                <a 
                                    href={link} 
                                    target="_blank" 
                                    rel="noopener noreferrer"
                                    class="bg-white/20 backdrop-blur-sm border border-white/30 text-white px-3 py-2 rounded-lg hover:bg-white/30 transition-all duration-200 flex items-center gap-2 text-sm"
                                >
                                    <Icon name="tabler:external-link" class="w-4 h-4" />
                                    Demo
                                </a>
                            )}
                            {github && (
                                <a 
                                    href={github} 
                                    target="_blank" 
                                    rel="noopener noreferrer"
                                    class="bg-white/20 backdrop-blur-sm border border-white/30 text-white px-3 py-2 rounded-lg hover:bg-white/30 transition-all duration-200 flex items-center gap-2 text-sm"
                                >
                                    <Icon name="tabler:brand-github" class="w-4 h-4" />
                                    Código
                                </a>
                            )}
                        </div>
                    </div>

                    <!-- Contenido de la tarjeta -->
                    <div class="p-5 flex flex-col flex-grow">
                        <!-- Título -->
                        <h4 class="text-xl font-bold text-gray-900 dark:text-gray-100 mb-3 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200">
                            {title}
                        </h4>
                        
                        <!-- Contenedor de descripción con altura fija -->
                        <div class="flex-grow mb-4">
                            <div class={`description-container relative project-${index}`}>
                                <p class="text-gray-600 dark:text-gray-300 text-sm leading-relaxed description-text text-justify" data-full-text={description}>
                                    {description}
                                    {description.length > 120 && (
                                        <span class="read-more-link hidden md:inline text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 text-xs font-medium cursor-pointer ml-1 transition-colors duration-200" data-index={index}>
                                            Ver más
                                        </span>
                                    )}
                                </p>
                                {description.length > 120 && (
                                    <div class="overlay-gradient hidden md:block absolute bottom-0 left-0 right-0 h-12 bg-gradient-to-t from-white dark:from-gray-800 via-white/80 dark:via-gray-800/80 to-transparent pointer-events-none"></div>
                                )}
                            </div>
                        </div>

                        <!-- Tags -->
                        <div class={`tags-container flex flex-wrap gap-1.5 mb-4 transition-all duration-300 tags-${index}`}>
                            {tags.map((tag) => (
                                <span class={`inline-flex items-center gap-1.5 px-2.5 py-1 rounded-full text-xs font-medium ${tag.class} transition-all duration-200 hover:scale-105`}>
                                    <Icon name={tag.icon} class="w-3 h-3" />
                                    {tag.name}
                                </span>
                            ))}
                        </div>

                        <!-- Enlaces -->
                        <div class="flex gap-3 mt-auto">
                            {link && (
                                <a 
                                    href={link} 
                                    target="_blank" 
                                    rel="noopener noreferrer"
                                    class="flex-1 bg-blue-600 hover:bg-blue-700 text-white text-center py-2.5 px-4 rounded-lg transition-all duration-200 text-sm font-medium hover:shadow-lg"
                                >
                                    Ver Proyecto
                                </a>
                            )}
                            {github && (
                                <a 
                                    href={github} 
                                    target="_blank" 
                                    rel="noopener noreferrer"
                                    class="bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 p-2.5 rounded-lg transition-all duration-200 hover:shadow-md"
                                    title="Ver código en GitHub"
                                >
                                    <Icon name="tabler:brand-github" class="w-5 h-5" />
                                </a>
                            )}
                        </div>
                    </div>
                </article>
            ))
        }
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Funcionalidad de "Ver más" solo para pantallas medianas y grandes
        if (window.innerWidth >= 768) {
            initializeReadMore();
        }
        
        // Reinicializar en cambio de tamaño de ventana
        window.addEventListener('resize', function() {
            if (window.innerWidth >= 768) {
                initializeReadMore();
            } else {
                resetToFullText();
            }
        });
        
        function initializeReadMore() {
            document.querySelectorAll('.description-text').forEach((text, index) => {
                const fullText = text.getAttribute('data-full-text');
                if (!fullText || fullText.length <= 120) return;
                
                const container = text.closest('.description-container');
                if (!container) return;
                
                // Configurar texto truncado
                const truncatedText = fullText.substring(0, 120) + "...";
                const readMoreLink = text.querySelector('.read-more-link');
                
                // Crear el contenido truncado con el enlace inline
                text.innerHTML = truncatedText + ' <span class="read-more-link text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 text-xs font-medium cursor-pointer transition-colors duration-200" data-index="' + index + '">Ver más</span>';
                
                // Configurar altura fija para evitar saltos
                const currentHeight = container.scrollHeight;
                if (container instanceof HTMLElement) {
                    container.style.height = currentHeight + 'px';
                    container.style.overflow = 'hidden';
                }
                
                // Mostrar overlay
                const overlay = container.querySelector('.overlay-gradient');
                if (overlay instanceof HTMLElement) {
                    overlay.style.opacity = '1';
                }
            });
        }
        
        function resetToFullText() {
            document.querySelectorAll('.description-text').forEach(text => {
                const fullText = text.getAttribute('data-full-text');
                if (fullText) {
                    text.textContent = fullText;
                    const container = text.closest('.description-container');
                    if (container instanceof HTMLElement) {
                        container.style.height = 'auto';
                        container.style.overflow = 'visible';
                    }
                }
            });
            
            // Ocultar overlays
            document.querySelectorAll('.overlay-gradient').forEach(overlay => {
                if (overlay instanceof HTMLElement) {
                    overlay.style.opacity = '0';
                }
            });
        }
        
        // Event delegation para los enlaces "Ver más"
        document.addEventListener('click', function(event) {
            const target = event.target;
            if (!(target instanceof HTMLElement) || !target.classList.contains('read-more-link')) return;
            
            const container = target.closest('.description-container');
            if (!container) return;
            
            const text = container.querySelector('.description-text');
            if (!text) return;
            
            const fullText = text.getAttribute('data-full-text');
            if (!fullText) return;
            
            const overlay = container.querySelector('.overlay-gradient');
            const tagsContainer = container.closest('.p-5')?.querySelector('.tags-container');
            
            if (target.textContent === 'Ver más') {
                // Expandir suavemente
                text.innerHTML = fullText + ' <span class="read-more-link text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 text-xs font-medium cursor-pointer transition-colors duration-200">Ver menos</span>';
                
                // Ocultar overlay con transición suave
                if (overlay instanceof HTMLElement) {
                    overlay.style.transition = 'opacity 0.3s ease';
                    overlay.style.opacity = '0';
                }
                
                // Ocultar tags suavemente con overlay gradual
                if (tagsContainer instanceof HTMLElement) {
                    tagsContainer.style.transition = 'all 0.4s ease';
                    tagsContainer.style.transform = 'translateY(-10px)';
                    tagsContainer.style.opacity = '0.3';
                    
                    // Crear overlay adicional sobre las tags
                    const tagsOverlay = document.createElement('div');
                    tagsOverlay.className = 'tags-overlay absolute inset-0 bg-gradient-to-t from-white dark:from-gray-800 to-transparent pointer-events-none z-5';
                    tagsOverlay.style.transition = 'opacity 0.4s ease';
                    tagsContainer.style.position = 'relative';
                    tagsContainer.appendChild(tagsOverlay);
                }
                
                // Ajustar altura del contenedor
                if (container instanceof HTMLElement) {
                    const newHeight = container.scrollHeight;
                    container.style.transition = 'height 0.4s ease';
                    container.style.height = newHeight + 'px';
                }
                
            } else if (target.textContent === 'Ver menos') {
                // Contraer suavemente
                const truncatedText = fullText.substring(0, 120) + "...";
                text.innerHTML = truncatedText + ' <span class="read-more-link text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 text-xs font-medium cursor-pointer transition-colors duration-200">Ver más</span>';
                
                // Mostrar overlay gradualmente
                if (overlay instanceof HTMLElement) {
                    overlay.style.transition = 'opacity 0.3s ease';
                    overlay.style.opacity = '1';
                }
                
                // Restaurar tags suavemente
                if (tagsContainer instanceof HTMLElement) {
                    tagsContainer.style.transition = 'all 0.4s ease';
                    tagsContainer.style.transform = 'translateY(0)';
                    tagsContainer.style.opacity = '1';
                    
                    // Remover overlay de tags
                    const tagsOverlay = tagsContainer.querySelector('.tags-overlay');
                    if (tagsOverlay instanceof HTMLElement) {
                        tagsOverlay.style.opacity = '0';
                        setTimeout(() => tagsOverlay.remove(), 400);
                    }
                }
                
                // Ajustar altura del contenedor
                if (container instanceof HTMLElement) {
                    const newHeight = container.scrollHeight;
                    container.style.transition = 'height 0.4s ease';
                    container.style.height = newHeight + 'px';
                }
            }
        });
    });
</script>

<style>
    /* Estilos para la consistencia de las tarjetas */
    article {
        min-height: 400px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    article:hover {
        transform: translateY(-2px);
    }

    /* Contenedor de descripción con altura controlada */
    .description-container {
        position: relative;
        transition: height 0.4s ease;
    }

    /* Overlay gradual más suave - SOLO para pantallas >= 768px */
    .overlay-gradient {
        transition: opacity 0.3s ease;
        z-index: 5;
    }

    /* Enlace "Ver más" inline */
    .read-more-link {
        transition: all 0.2s ease;
        border-bottom: 1px solid transparent;
    }

    .read-more-link:hover {
        border-bottom-color: currentColor;
    }

    /* Animaciones para las tags */
    .tags-container {
        transition: all 0.4s ease;
        position: relative;
    }

    /* Overlay para tags */
    .tags-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(to top, white, transparent);
        pointer-events: none;
        z-index: 5;
        transition: opacity 0.4s ease;
    }

    .dark .tags-overlay {
        background: linear-gradient(to top, rgb(31 41 55), transparent);
    }

    /* Responsividad mejorada */
    @media (max-width: 767px) {
        /* En móviles, desactivar completamente la funcionalidad de ver más */
        .overlay-gradient {
            display: none !important;
            opacity: 0 !important;
        }
        
        .read-more-link {
            display: none !important;
        }
        
        .description-container {
            height: auto !important;
            overflow: visible !important;
        }
        
        .description-text {
            /* Mostrar texto completo en móviles siempre */
            display: block !important;
        }
        
        .tags-container {
            /* Asegurar que las tags sean completamente visibles en móviles */
            opacity: 1 !important;
            transform: none !important;
            position: static !important;
        }
        
        .tags-overlay {
            display: none !important;
        }
        
        .grid {
            grid-template-columns: 1fr;
            gap: 1.5rem;
            padding: 0 0.5rem;
        }
        
        article {
            margin: 0 0.25rem;
            min-height: auto;
        }
    }

    @media (min-width: 768px) and (max-width: 1024px) {
        .grid {
            grid-template-columns: repeat(2, 1fr);
        }
        
        /* En tablets, altura mínima un poco menor */
        article {
            min-height: 380px;
        }
    }

    @media (min-width: 1025px) {
        .grid {
            grid-template-columns: repeat(3, 1fr);
        }
    }

    /* Mejores sombras y efectos */
    article {
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }

    article:hover {
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }

    /* Transiciones suaves para todos los elementos interactivos */
    .tags-container span {
        transition: all 0.2s ease;
    }

    .tags-container span:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    /* Asegurar que en móviles el texto se muestre completo sin restricciones */
    @media (max-width: 767px) {
        .description-text {
            max-height: none !important;
            overflow: visible !important;
            -webkit-line-clamp: unset !important;
            white-space: normal !important;
            text-align: justify !important;
        }
    }

    /* Justificación del texto en todas las pantallas */
    .description-text {
        text-align: justify;
        hyphens: auto;
        word-break: break-word;
    }
</style>